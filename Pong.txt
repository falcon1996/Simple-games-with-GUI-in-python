# Implementation of classic arcade game Pong

import simplegui
import random

# initialize globals - pos and vel encode vertical info for paddles
WIDTH = 600
HEIGHT = 400       
BALL_RADIUS = 10
PAD_WIDTH = 8
PAD_HEIGHT = 80
HALF_PAD_WIDTH = PAD_WIDTH / 2
HALF_PAD_HEIGHT = PAD_HEIGHT / 2
LEFT = False
RIGHT = True
ball_pos = [WIDTH/2,HEIGHT/2]
ball_vel = [0.5,0.9]
paddle1_pos = HEIGHT/2
paddle2_pos = HEIGHT/2
paddle1_vel = 0
paddle2_vel = 0
score1 = 0
score2 = 0

# initialize ball_pos and ball_vel for new bal in middle of table
# if direction is RIGHT, the ball's velocity is upper right, else upper left
def spawn_ball(direction):
    global ball_pos
    global ball_vel # these are vectors stored as lists
    
    ball_pos = [WIDTH/2,HEIGHT/2]
    
    if direction == RIGHT:
        ball_vel[0] = random.randrange(1,3)
        ball_vel[1] = random.randrange(-2,0)
        
    elif direction == LEFT:
        ball_vel[0] = random.randrange(-3,-1)
        ball_vel[1] = random.randrange(-2,0)

# define event handlers
def new_game():
    global paddle1_pos, paddle2_pos, paddle1_vel, paddle2_vel  # these are numbers
    global score1, score2  # these are ints
    
    score1 = 0
    score2 = 0
    spawn_ball(RIGHT)

def draw(canvas):
    global score1, score2, paddle1_pos, paddle2_pos,ball_pos,ball_vel,BALL_RADIUS
    global paddle1_vel
    global paddle2_vel
 
        
    # draw mid line and gutters
    canvas.draw_line([WIDTH / 2, 0],[WIDTH / 2, HEIGHT], 1, "White")
    canvas.draw_line([PAD_WIDTH, 0],[PAD_WIDTH, HEIGHT], 1, "White")
    canvas.draw_line([WIDTH - PAD_WIDTH, 0],[WIDTH - PAD_WIDTH, HEIGHT], 1, "White")
        
    # update ball
    ball_pos[0] += ball_vel[0]
    ball_pos[1] += ball_vel[1]
    
    if ball_pos[1] <= BALL_RADIUS:
        ball_vel[1] = - ball_vel[1] 
        
    elif ball_pos[1] >= HEIGHT - BALL_RADIUS:
            ball_vel[1] = - ball_vel[1]
            
    if(ball_pos[0] <= PAD_WIDTH+BALL_RADIUS and  not(paddle1_pos-30 <= ball_pos[1] <= paddle1_pos+30)):
        spawn_ball(RIGHT)
        score2+=1
        
    elif(ball_pos[0] <= PAD_WIDTH+BALL_RADIUS and (paddle1_pos-30 <= ball_pos[1] <= paddle1_pos+30)):
        ball_vel[0] = -1.1*ball_vel[0]
        ball_vel[1] = 1.1 * ball_vel[1]
        
    if (ball_pos[0] >= WIDTH - PAD_WIDTH-BALL_RADIUS and not(paddle2_pos-30) <= ball_pos[1] <= paddle2_pos+30):
        spawn_ball(LEFT)
        score1+=1
        
    elif(ball_pos[0] >= WIDTH - PAD_WIDTH-BALL_RADIUS and (paddle2_pos-30) <= ball_pos[1] <= paddle2_pos+30):
        ball_vel[0] = -1.4*ball_vel[0]
        ball_vel[1] = 1.4*ball_vel[1]
       
    # draw ball
    canvas.draw_circle((ball_pos), BALL_RADIUS, 1, 'White', 'Blue')
    
    # update paddle's vertical position, keep paddle on the screen
    paddle1_pos = paddle1_pos + paddle1_vel
    
    if paddle1_pos >= HEIGHT-30:
        paddle1_pos = HEIGHT-30
    elif paddle1_pos <=30:
        paddle1_pos = 30  
        
    paddle2_pos = paddle2_pos + paddle2_vel
    if paddle2_pos >= HEIGHT-30:
        paddle2_pos = HEIGHT-30
    elif paddle2_pos <=30:
        paddle2_pos = 30 
        
    
    
    # draw paddles
    canvas.draw_line((0, paddle1_pos -30), (0,paddle1_pos + 30 ), PAD_WIDTH, 'Red')
    canvas.draw_line((WIDTH, paddle2_pos -30), (WIDTH,paddle2_pos + 30 ), PAD_WIDTH, 'YELLOW')
    
    # determine whether paddle and ball collide    
    
    # draw scores
    player1_score = str(score1)
    player2_score = str(score2)
    
    canvas.draw_text( player1_score, (200, 50), 45, 'Gray', 'serif')
    canvas.draw_text(player2_score, (400,50), 45, 'Gray', 'serif')
        
def keydown(key):
    global paddle1_vel, paddle2_vel
    
    if(key == simplegui.KEY_MAP["w"]):
        paddle1_vel-=5
        
    if(key == simplegui.KEY_MAP["s"]):
        paddle1_vel+=5
        
    if(key == simplegui.KEY_MAP["up"]):
        paddle2_vel-=5
        
    if(key == simplegui.KEY_MAP["down"]):
        paddle2_vel+=5
        
    
   
def keyup(key):
    global paddle1_vel, paddle2_vel
    
    if(key == simplegui.KEY_MAP["w"]):
        paddle1_vel = 0
        
    if(key == simplegui.KEY_MAP["s"]):
        paddle1_vel = 0
        
    if(key == simplegui.KEY_MAP["up"]):
        paddle2_vel = 0
        
    if(key == simplegui.KEY_MAP["down"]):
        paddle2_vel = 0
    
# create frame
frame = simplegui.create_frame("Pong", WIDTH, HEIGHT)
frame.set_draw_handler(draw)
frame.set_keydown_handler(keydown)
frame.set_keyup_handler(keyup)
button1 = frame.add_button('Reset', new_game)


# start frame
new_game()
frame.start()